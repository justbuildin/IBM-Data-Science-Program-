--EXERCISE 1 : USING JOINS

--QUESTION 1
SELECT PS.NAME_OF_SCHOOL, CD.COMMUNITY_AREA_NAME, PS.AVERAGE_STUDENT_ATTENDANCE, CD.HARDSHIP_INDEX
FROM CHICAGO_PUBLIC_SCHOOLS AS PS
LEFT JOIN CHICAGO_CENSUS_DATA AS CD
ON PS.COMMUNITY_AREA_NUMBER = CD.COMMUNITY_AREA_NUMBER
WHERE HARDSHIP_INDEX = 98;


--QUESTION 2 
SELECT CC.CASE_NUMBER, CC.PRIMARY_TYPE, CD.COMMUNITY_AREA_NAME
FROM CHICAGO_CRIME_DATA AS CC
LEFT JOIN CHICAGO_CENSUS_DATA AS CD
ON CC.COMMUNITY_AREA_NUMBER = CD.COMMUNITY_AREA_NUMBER
WHERE LOCATION_DESCRIPTION LIKE '%SCHOOL%';


--EXERCISE 2 : CREATING A VIEW

--QUESTION 1
DROP VIEW NEW_VIEW;
--QUESTION 2
CREATE VIEW NEW_VIEW (School_Name, Safety_Rating, Family_Rating, Environment_Rating, Instruction_Rating, Leaders_Rating, Teachers_Rating)
AS SELECT NAME_OF_SCHOOL, SAFETY_ICON, FAMILY_INVOLVEMENT_ICON, ENVIRONMENT_ICON, INSTRUCTION_ICON, LEADERS_ICON, TEACHERS_ICON
FROM CHICAGO_PUBLIC_SCHOOLS; 
--QUESTION 3
SELECT * FROM NEW_VIEW;
SELECT SCHOOL_NAME, LEADERS_RATING
FROM NEW_VIEW; 

--EXERCISE 3: CREATING A STORED PROCEDURE

--QUESTION 1
--#SET TERMINATOR @
CREATE OR REPLACE PROCEDURE UPDATE_LEADERS_SCORE
(IN IN_SCHOOL_ID INTEGER, IN IN_LEADER_SCORE INTEGER)
LANGUAGE SQL
READS SQL DATA
DYNAMIC RESULT SETS 1
BEGIN
DECLARE C1 CURSOR
WITH RETURN FOR
SELECT * FROM CHICAGO_PUBLIC_SCHOOLS;
OPEN C1;
END
@

--QUESTION 2
--SET TERMINATOR @
CREATE OR REPLACE PROCEDURE UPDATE_LEADERS_SCORE
(IN IN_SCHOOL_ID INTEGER, IN IN_LEADER_SCORE INTEGER)
LANGUAGE SQL
MODIFIES SQL DATA
DYNAMIC RESULT SETS 1
BEGIN
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET "LEADERS_SCORE" = IN_LEADER_SCORE
WHERE "SCHOOL_ID"= IN_SCHOOL_ID;
END
@

--QUESTION 3

--SET TERMINATOR @
CREATE OR REPLACE PROCEDURE UPDATE_LEADERS_SCORE
(IN IN_SCHOOL_ID INTEGER, IN IN_LEADER_SCORE INTEGER)
LANGUAGE SQL
MODIFIES SQL DATA

BEGIN

UPDATE CHICAGO_PUBLIC_SCHOOLS
SET "LEADERS_SCORE" = IN_LEADER_SCORE
WHERE "SCHOOL_ID"= IN_SCHOOL_ID;

IF IN_LEADER_SCORE>0 AND IN_LEADER_SCORE<20 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'VERY WEAK';

ELSEIF IN_LEADER_SCORE<40 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'WEAK';

ELSEIF IN_LEADER_SCORE<60 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'AVERAGE';

ELSEIF IN_LEADER_SCORE<80 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'STRONG';

ELSEIF IN_LEADER_SCORE<100 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'VERY STRONG'; 
END IF;
END
@

--QUESTION 4

--EXERCISE 4
--QUESTION 1
--SET TERMINATOR @
CREATE OR REPLACE PROCEDURE UPDATE_LEADERS_SCORE
(IN IN_SCHOOL_ID INTEGER, IN IN_LEADER_SCORE INTEGER)
LANGUAGE SQL
MODIFIES SQL DATA

BEGIN

UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_SCORE = IN_LEADER_SCORE
WHERE SCHOOL_ID= IN_SCHOOL_ID;

IF IN_LEADER_SCORE>0 AND IN_LEADER_SCORE<20 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'VERY WEAK';

ELSEIF IN_LEADER_SCORE<40 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'WEAK';

ELSEIF IN_LEADER_SCORE<60 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'AVERAGE';

ELSEIF IN_LEADER_SCORE<80 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'STRONG';

ELSEIF IN_LEADER_SCORE<100 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'VERY STRONG'; 
ELSE ROLLBACK WORK; 
END IF;
END
@

--QUESTION 2

--SET TERMINATOR @
CREATE OR REPLACE PROCEDURE UPDATE_LEADERS_SCORE
(IN IN_SCHOOL_ID INTEGER, IN IN_LEADER_SCORE INTEGER)
LANGUAGE SQL
MODIFIES SQL DATA

BEGIN

UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_SCORE = IN_LEADER_SCORE
WHERE SCHOOL_ID= IN_SCHOOL_ID;

IF IN_LEADER_SCORE>0 AND IN_LEADER_SCORE<20 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'VERY WEAK';

ELSEIF IN_LEADER_SCORE<40 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'WEAK';

ELSEIF IN_LEADER_SCORE<60 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'AVERAGE';

ELSEIF IN_LEADER_SCORE<80 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'STRONG';

ELSEIF IN_LEADER_SCORE<100 THEN 
UPDATE CHICAGO_PUBLIC_SCHOOLS
SET LEADERS_ICON= 'VERY STRONG'; 
ELSE ROLLBACK WORK; 
END IF;
COMMIT WORK;
END
@
